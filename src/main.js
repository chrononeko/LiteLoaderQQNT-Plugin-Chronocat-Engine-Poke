"use strict";var je=Object.create;var K=Object.defineProperty;var Je=Object.getOwnPropertyDescriptor;var ke=Object.getOwnPropertyNames;var Xe=Object.getPrototypeOf,Qe=Object.prototype.hasOwnProperty;var v=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ye=(e,t)=>{for(var i in t)K(e,i,{get:t[i],enumerable:!0})},ce=(e,t,i,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of ke(t))!Qe.call(e,s)&&s!==i&&K(e,s,{get:()=>t[s],enumerable:!(a=Je(t,s))||a.enumerable});return e};var et=(e,t,i)=>(i=e!=null?je(Xe(e)):{},ce(t||!e||!e.__esModule?K(i,"default",{value:e,enumerable:!0}):i,e)),tt=e=>ce(K({},"__esModule",{value:!0}),e);var ue=e=>new Uint8Array(Buffer.from(e,"base64"));var X=v(Ee=>{"use strict";Ee.require=function(){if(typeof process=="object"&&process.versions&&process.versions.electron)try{let e=require("original-fs");if(Object.keys(e).length>0)return e}catch{}return require("fs")}});var Q=v((St,le)=>{"use strict";le.exports={LOCHDR:30,LOCSIG:67324752,LOCVER:4,LOCFLG:6,LOCHOW:8,LOCTIM:10,LOCCRC:14,LOCSIZ:18,LOCLEN:22,LOCNAM:26,LOCEXT:28,EXTSIG:134695760,EXTHDR:16,EXTCRC:4,EXTSIZ:8,EXTLEN:12,CENHDR:46,CENSIG:33639248,CENVEM:4,CENVER:6,CENFLG:8,CENHOW:10,CENTIM:12,CENCRC:16,CENSIZ:20,CENLEN:24,CENNAM:28,CENEXT:30,CENCOM:32,CENDSK:34,CENATT:36,CENATX:38,CENOFF:42,ENDHDR:22,ENDSIG:101010256,ENDSUB:8,ENDTOT:10,ENDSIZ:12,ENDOFF:16,ENDCOM:20,END64HDR:20,END64SIG:117853008,END64START:4,END64OFF:8,END64NUMDISKS:16,ZIP64SIG:101075792,ZIP64HDR:56,ZIP64LEAD:12,ZIP64SIZE:4,ZIP64VEM:12,ZIP64VER:14,ZIP64DSK:16,ZIP64DSKDIR:20,ZIP64SUB:24,ZIP64TOT:32,ZIP64SIZB:40,ZIP64OFF:48,ZIP64EXTRA:56,STORED:0,SHRUNK:1,REDUCED1:2,REDUCED2:3,REDUCED3:4,REDUCED4:5,IMPLODED:6,DEFLATED:8,ENHANCED_DEFLATED:9,PKWARE:10,BZIP2:12,LZMA:14,IBM_TERSE:18,IBM_LZ77:19,AES_ENCRYPT:99,FLG_ENC:1,FLG_COMP1:2,FLG_COMP2:4,FLG_DESC:8,FLG_ENH:16,FLG_PATCH:32,FLG_STR:64,FLG_EFS:2048,FLG_MSK:4096,FILE:2,BUFFER:1,NONE:0,EF_ID:0,EF_SIZE:2,ID_ZIP64:1,ID_AVINFO:7,ID_PFS:8,ID_OS2:9,ID_NTFS:10,ID_OPENVMS:12,ID_UNIX:13,ID_FORK:14,ID_PATCH:15,ID_X509_PKCS7:20,ID_X509_CERTID_F:21,ID_X509_CERTID_C:22,ID_STRONGENC:23,ID_RECORD_MGT:24,ID_X509_PKCS7_RL:25,ID_IBM1:101,ID_IBM2:102,ID_POSZIP:18064,EF_ZIP64_OR_32:4294967295,EF_ZIP64_OR_16:65535,EF_ZIP64_SUNCOMP:0,EF_ZIP64_SCOMP:8,EF_ZIP64_RHO:16,EF_ZIP64_DSN:24}});var Y=v((Ot,de)=>{"use strict";de.exports={INVALID_LOC:"Invalid LOC header (bad signature)",INVALID_CEN:"Invalid CEN header (bad signature)",INVALID_END:"Invalid END header (bad signature)",NO_DATA:"Nothing to decompress",BAD_CRC:"CRC32 checksum failed",FILE_IN_THE_WAY:"There is a file in the way: %s",UNKNOWN_METHOD:"Invalid/unsupported compression method",AVAIL_DATA:"inflate::Available inflate data did not terminate",INVALID_DISTANCE:"inflate::Invalid literal/length or distance code in fixed or dynamic block",TO_MANY_CODES:"inflate::Dynamic block code description: too many length or distance codes",INVALID_REPEAT_LEN:"inflate::Dynamic block code description: repeat more than specified lengths",INVALID_REPEAT_FIRST:"inflate::Dynamic block code description: repeat lengths with no first length",INCOMPLETE_CODES:"inflate::Dynamic block code description: code lengths codes incomplete",INVALID_DYN_DISTANCE:"inflate::Dynamic block code description: invalid distance code lengths",INVALID_CODES_LEN:"inflate::Dynamic block code description: invalid literal/length code lengths",INVALID_STORE_BLOCK:"inflate::Stored block length did not match one's complement",INVALID_BLOCK_TYPE:"inflate::Invalid block type (type == 3)",CANT_EXTRACT_FILE:"Could not extract the file",CANT_OVERRIDE:"Target file already exists",NO_ZIP:"No zip file was loaded",NO_ENTRY:"Entry doesn't exist",DIRECTORY_CONTENT_ERROR:"A directory cannot have content",FILE_NOT_FOUND:"File not found: %s",NOT_IMPLEMENTED:"Not implemented",INVALID_FILENAME:"Invalid filename",INVALID_FORMAT:"Invalid or unsupported zip format. No END header found"}});var ye=v((wt,Ie)=>{"use strict";var nt=X().require(),U=require("path"),me=Q(),rt=Y(),ot=typeof process=="object"&&process.platform==="win32",he=e=>e&&typeof e=="object",ee=new Uint32Array(256).map((e,t)=>{for(let i=0;i<8;i++)t&1?t=3988292384^t>>>1:t>>>=1;return t>>>0});function A(e){this.sep=U.sep,this.fs=nt,he(e)&&he(e.fs)&&typeof e.fs.statSync=="function"&&(this.fs=e.fs)}Ie.exports=A;A.prototype.makeDir=function(e){let t=this;function i(a){let s=a.split(t.sep)[0];a.split(t.sep).forEach(function(o){if(!(!o||o.substr(-1,1)===":")){s+=t.sep+o;var h;try{h=t.fs.statSync(s)}catch{t.fs.mkdirSync(s)}if(h&&h.isFile())throw rt.FILE_IN_THE_WAY.replace("%s",s)}})}i(e)};A.prototype.writeFileTo=function(e,t,i,a){let s=this;if(s.fs.existsSync(e)){if(!i)return!1;var o=s.fs.statSync(e);if(o.isDirectory())return!1}var h=U.dirname(e);s.fs.existsSync(h)||s.makeDir(h);var C;try{C=s.fs.openSync(e,"w",438)}catch{s.fs.chmodSync(e,438),C=s.fs.openSync(e,"w",438)}if(C)try{s.fs.writeSync(C,t,0,t.length,0)}finally{s.fs.closeSync(C)}return s.fs.chmodSync(e,a||438),!0};A.prototype.writeFileToAsync=function(e,t,i,a,s){typeof a=="function"&&(s=a,a=void 0);let o=this;o.fs.exists(e,function(h){if(h&&!i)return s(!1);o.fs.stat(e,function(C,g){if(h&&g.isDirectory())return s(!1);var L=U.dirname(e);o.fs.exists(L,function(c){c||o.makeDir(L),o.fs.open(e,"w",438,function(l,d){l?o.fs.chmod(e,438,function(){o.fs.open(e,"w",438,function(u,r){o.fs.write(r,t,0,t.length,0,function(){o.fs.close(r,function(){o.fs.chmod(e,a||438,function(){s(!0)})})})})}):d?o.fs.write(d,t,0,t.length,0,function(){o.fs.close(d,function(){o.fs.chmod(e,a||438,function(){s(!0)})})}):o.fs.chmod(e,a||438,function(){s(!0)})})})})})};A.prototype.findFiles=function(e){let t=this;function i(a,s,o){typeof s=="boolean"&&(o=s,s=void 0);let h=[];return t.fs.readdirSync(a).forEach(function(C){var g=U.join(a,C);t.fs.statSync(g).isDirectory()&&o&&(h=h.concat(i(g,s,o))),(!s||s.test(g))&&h.push(U.normalize(g)+(t.fs.statSync(g).isDirectory()?t.sep:""))}),h}return i(e,void 0,!0)};A.prototype.getAttributes=function(){};A.prototype.setAttributes=function(){};A.crc32update=function(e,t){return ee[(e^t)&255]^e>>>8};A.crc32=function(e){typeof e=="string"&&(e=Buffer.from(e,"utf8")),ee.length||genCRCTable();let t=e.length,i=-1;for(let a=0;a<t;)i=A.crc32update(i,e[a++]);return~i>>>0};A.methodToString=function(e){switch(e){case me.STORED:return"STORED ("+e+")";case me.DEFLATED:return"DEFLATED ("+e+")";default:return"UNSUPPORTED ("+e+")"}};A.canonical=function(e){if(!e)return"";var t=U.posix.normalize("/"+e.split("\\").join("/"));return U.join(".",t)};A.sanitize=function(e,t){e=U.resolve(U.normalize(e));for(var i=t.split("/"),a=0,s=i.length;a<s;a++){var o=U.normalize(U.join(e,i.slice(a,s).join(U.sep)));if(o.indexOf(e)===0)return o}return U.normalize(U.join(e,U.basename(t)))};A.toBuffer=function(t){return Buffer.isBuffer(t)?t:t instanceof Uint8Array?Buffer.from(t):typeof t=="string"?Buffer.from(t,"utf8"):Buffer.alloc(0)};A.readBigUInt64LE=function(e,t){var i=Buffer.from(e.slice(t,t+8));return i.swap64(),parseInt(`0x${i.toString("hex")}`)};A.isWin=ot;A.crcTable=ee});var Ne=v((xt,Ce)=>{"use strict";var W=X().require(),ge=require("path");W.existsSync=W.existsSync||ge.existsSync;Ce.exports=function(e){var t=e||"",i=s(),a=null;function s(){return{directory:!1,readonly:!1,hidden:!1,executable:!1,mtime:0,atime:0}}return t&&W.existsSync(t)?(a=W.statSync(t),i.directory=a.isDirectory(),i.mtime=a.mtime,i.atime=a.atime,i.executable=(73&a.mode)!==0,i.readonly=(128&a.mode)===0,i.hidden=ge.basename(t)[0]==="."):console.warn("Invalid path: "+t),{get directory(){return i.directory},get readOnly(){return i.readonly},get hidden(){return i.hidden},get mtime(){return i.mtime},get atime(){return i.atime},get executable(){return i.executable},decodeAttributes:function(){},encodeAttributes:function(){},toJSON:function(){return{path:t,isDirectory:i.directory,isReadOnly:i.readonly,isHidden:i.hidden,isExecutable:i.executable,mTime:i.mtime,aTime:i.atime}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var M=v((At,z)=>{"use strict";z.exports=ye();z.exports.Constants=Q();z.exports.Errors=Y();z.exports.FileAttr=Ne()});var De=v((Tt,Le)=>{"use strict";var q=M(),I=q.Constants;Le.exports=function(){var e=20,t=10,i=0,a=0,s=0,o=0,h=0,C=0,g=0,L=0,c=0,l=0,d=0,u=0,r=0;e|=q.isWin?2560:768,i|=I.FLG_EFS;var f={};function E(n){n=new Date(n),s=(n.getFullYear()-1980&127)<<25|n.getMonth()+1<<21|n.getDate()<<16|n.getHours()<<11|n.getMinutes()<<5|n.getSeconds()>>1}return E(+new Date),{get made(){return e},set made(n){e=n},get version(){return t},set version(n){t=n},get flags(){return i},set flags(n){i=n},get method(){return a},set method(n){switch(n){case I.STORED:this.version=10;case I.DEFLATED:default:this.version=20}a=n},get time(){return new Date((s>>25&127)+1980,(s>>21&15)-1,s>>16&31,s>>11&31,s>>5&63,(s&31)<<1)},set time(n){E(n)},get crc(){return o},set crc(n){o=Math.max(0,n)>>>0},get compressedSize(){return h},set compressedSize(n){h=Math.max(0,n)>>>0},get size(){return C},set size(n){C=Math.max(0,n)>>>0},get fileNameLength(){return g},set fileNameLength(n){g=n},get extraLength(){return L},set extraLength(n){L=n},get commentLength(){return c},set commentLength(n){c=n},get diskNumStart(){return l},set diskNumStart(n){l=Math.max(0,n)>>>0},get inAttr(){return d},set inAttr(n){d=Math.max(0,n)>>>0},get attr(){return u},set attr(n){u=Math.max(0,n)>>>0},get fileAttr(){return u?(u>>>0|0)>>16&4095:0},get offset(){return r},set offset(n){r=Math.max(0,n)>>>0},get encripted(){return(i&1)===1},get entryHeaderSize(){return I.CENHDR+g+L+c},get realDataOffset(){return r+I.LOCHDR+f.fnameLen+f.extraLen},get dataHeader(){return f},loadDataHeaderFromBinary:function(n){var m=n.slice(r,r+I.LOCHDR);if(m.readUInt32LE(0)!==I.LOCSIG)throw new Error(q.Errors.INVALID_LOC);f={version:m.readUInt16LE(I.LOCVER),flags:m.readUInt16LE(I.LOCFLG),method:m.readUInt16LE(I.LOCHOW),time:m.readUInt32LE(I.LOCTIM),crc:m.readUInt32LE(I.LOCCRC),compressedSize:m.readUInt32LE(I.LOCSIZ),size:m.readUInt32LE(I.LOCLEN),fnameLen:m.readUInt16LE(I.LOCNAM),extraLen:m.readUInt16LE(I.LOCEXT)}},loadFromBinary:function(n){if(n.length!==I.CENHDR||n.readUInt32LE(0)!==I.CENSIG)throw new Error(q.Errors.INVALID_CEN);e=n.readUInt16LE(I.CENVEM),t=n.readUInt16LE(I.CENVER),i=n.readUInt16LE(I.CENFLG),a=n.readUInt16LE(I.CENHOW),s=n.readUInt32LE(I.CENTIM),o=n.readUInt32LE(I.CENCRC),h=n.readUInt32LE(I.CENSIZ),C=n.readUInt32LE(I.CENLEN),g=n.readUInt16LE(I.CENNAM),L=n.readUInt16LE(I.CENEXT),c=n.readUInt16LE(I.CENCOM),l=n.readUInt16LE(I.CENDSK),d=n.readUInt16LE(I.CENATT),u=n.readUInt32LE(I.CENATX),r=n.readUInt32LE(I.CENOFF)},dataHeaderToBinary:function(){var n=Buffer.alloc(I.LOCHDR);return n.writeUInt32LE(I.LOCSIG,0),n.writeUInt16LE(t,I.LOCVER),n.writeUInt16LE(i,I.LOCFLG),n.writeUInt16LE(a,I.LOCHOW),n.writeUInt32LE(s,I.LOCTIM),n.writeUInt32LE(o,I.LOCCRC),n.writeUInt32LE(h,I.LOCSIZ),n.writeUInt32LE(C,I.LOCLEN),n.writeUInt16LE(g,I.LOCNAM),n.writeUInt16LE(L,I.LOCEXT),n},entryHeaderToBinary:function(){var n=Buffer.alloc(I.CENHDR+g+L+c);return n.writeUInt32LE(I.CENSIG,0),n.writeUInt16LE(e,I.CENVEM),n.writeUInt16LE(t,I.CENVER),n.writeUInt16LE(i,I.CENFLG),n.writeUInt16LE(a,I.CENHOW),n.writeUInt32LE(s,I.CENTIM),n.writeUInt32LE(o,I.CENCRC),n.writeUInt32LE(h,I.CENSIZ),n.writeUInt32LE(C,I.CENLEN),n.writeUInt16LE(g,I.CENNAM),n.writeUInt16LE(L,I.CENEXT),n.writeUInt16LE(c,I.CENCOM),n.writeUInt16LE(l,I.CENDSK),n.writeUInt16LE(d,I.CENATT),n.writeUInt32LE(u,I.CENATX),n.writeUInt32LE(r,I.CENOFF),n.fill(0,I.CENHDR),n},toJSON:function(){let n=function(m){return m+" bytes"};return{made:e,version:t,flags:i,method:q.methodToString(a),time:this.time,crc:"0x"+o.toString(16).toUpperCase(),compressedSize:n(h),size:n(C),fileNameLength:n(g),extraLength:n(L),commentLength:n(c),diskNumStart:l,inAttr:d,attr:u,offset:r,entryHeaderSize:n(I.CENHDR+g+L+c)}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var pe=v((vt,_e)=>{"use strict";var P=M(),_=P.Constants;_e.exports=function(){var e=0,t=0,i=0,a=0,s=0;return{get diskEntries(){return e},set diskEntries(o){e=t=o},get totalEntries(){return t},set totalEntries(o){t=e=o},get size(){return i},set size(o){i=o},get offset(){return a},set offset(o){a=o},get commentLength(){return s},set commentLength(o){s=o},get mainHeaderSize(){return _.ENDHDR+s},loadFromBinary:function(o){if((o.length!==_.ENDHDR||o.readUInt32LE(0)!==_.ENDSIG)&&(o.length<_.ZIP64HDR||o.readUInt32LE(0)!==_.ZIP64SIG))throw new Error(P.Errors.INVALID_END);o.readUInt32LE(0)===_.ENDSIG?(e=o.readUInt16LE(_.ENDSUB),t=o.readUInt16LE(_.ENDTOT),i=o.readUInt32LE(_.ENDSIZ),a=o.readUInt32LE(_.ENDOFF),s=o.readUInt16LE(_.ENDCOM)):(e=P.readBigUInt64LE(o,_.ZIP64SUB),t=P.readBigUInt64LE(o,_.ZIP64TOT),i=P.readBigUInt64LE(o,_.ZIP64SIZE),a=P.readBigUInt64LE(o,_.ZIP64OFF),s=0)},toBinary:function(){var o=Buffer.alloc(_.ENDHDR+s);return o.writeUInt32LE(_.ENDSIG,0),o.writeUInt32LE(0,4),o.writeUInt16LE(e,_.ENDSUB),o.writeUInt16LE(t,_.ENDTOT),o.writeUInt32LE(i,_.ENDSIZ),o.writeUInt32LE(a,_.ENDOFF),o.writeUInt16LE(s,_.ENDCOM),o.fill(" ",_.ENDHDR),o},toJSON:function(){let o=function(h,C){let g=h.toString(16).toUpperCase();for(;g.length<C;)g="0"+g;return"0x"+g};return{diskEntries:e,totalEntries:t,size:i+" bytes",offset:o(a,4),commentLength:s}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var ne=v(te=>{"use strict";te.EntryHeader=De();te.MainHeader=pe()});var Oe=v((Ut,Se)=>{"use strict";Se.exports=function(e){var t=require("zlib"),i={chunkSize:(parseInt(e.length/1024)+1)*1024};return{deflate:function(){return t.deflateRawSync(e,i)},deflateAsync:function(a){var s=t.createDeflateRaw(i),o=[],h=0;s.on("data",function(C){o.push(C),h+=C.length}),s.on("end",function(){var C=Buffer.alloc(h),g=0;C.fill(0);for(var L=0;L<o.length;L++){var c=o[L];c.copy(C,g),g+=c.length}a&&a(C)}),s.end(e)}}}});var xe=v((Rt,we)=>{"use strict";we.exports=function(e){var t=require("zlib");return{inflate:function(){return t.inflateRawSync(e)},inflateAsync:function(i){var a=t.createInflateRaw(),s=[],o=0;a.on("data",function(h){s.push(h),o+=h.length}),a.on("end",function(){var h=Buffer.alloc(o),C=0;h.fill(0);for(var g=0;g<s.length;g++){var L=s[g];L.copy(h,C),C+=L.length}i&&i(h)}),a.end(e)}}}});var Ue=v((Zt,Fe)=>{"use strict";var{randomFillSync:Ae}=require("crypto"),it=new Uint32Array(256).map((e,t)=>{for(let i=0;i<8;i++)t&1?t=t>>>1^3988292384:t>>>=1;return t>>>0}),ve=(e,t)=>Math.imul(e,t)>>>0,Te=(e,t)=>it[(e^t)&255]^e>>>8,G=()=>typeof Ae=="function"?Ae(Buffer.alloc(12)):G.node();G.node=()=>{let e=Buffer.alloc(12),t=e.length;for(let i=0;i<t;i++)e[i]=Math.random()*256&255;return e};var V={genSalt:G};function b(e){let t=Buffer.isBuffer(e)?e:Buffer.from(e);this.keys=new Uint32Array([305419896,591751049,878082192]);for(let i=0;i<t.length;i++)this.updateKeys(t[i])}b.prototype.updateKeys=function(e){let t=this.keys;return t[0]=Te(t[0],e),t[1]+=t[0]&255,t[1]=ve(t[1],134775813)+1,t[2]=Te(t[2],t[1]>>>24),e};b.prototype.next=function(){let e=(this.keys[2]|2)>>>0;return ve(e,e^1)>>8&255};function st(e){let t=new b(e);return function(i){let a=Buffer.alloc(i.length),s=0;for(let o of i)a[s++]=t.updateKeys(o^t.next());return a}}function ft(e){let t=new b(e);return function(i,a,s=0){a||(a=Buffer.alloc(i.length));for(let o of i){let h=t.next();a[s++]=o^h,t.updateKeys(o)}return a}}function at(e,t,i){if(!e||!Buffer.isBuffer(e)||e.length<12)return Buffer.alloc(0);let a=st(i);if(a(e.slice(0,12))[11]!==t.crc>>>24)throw"ADM-ZIP: Wrong Password";return a(e.slice(12))}function ct(e){Buffer.isBuffer(e)&&e.length>=12?V.genSalt=function(){return e.slice(0,12)}:e==="node"?V.genSalt=G.node:V.genSalt=G}function ut(e,t,i,a=!1){e==null&&(e=Buffer.alloc(0)),Buffer.isBuffer(e)||(e=Buffer.from(e.toString()));let s=ft(i),o=V.genSalt();o[11]=t.crc>>>24&255,a&&(o[10]=t.crc>>>16&255);let h=Buffer.alloc(e.length+12);return s(o,h),s(e,h,12)}Fe.exports={decrypt:at,encrypt:ut,_salter:ct}});var Re=v($=>{"use strict";$.Deflater=Oe();$.Inflater=xe();$.ZipCrypto=Ue()});var oe=v((Ht,Ze)=>{"use strict";var p=M(),Et=ne(),R=p.Constants,re=Re();Ze.exports=function(e){var t=new Et.EntryHeader,i=Buffer.alloc(0),a=Buffer.alloc(0),s=!1,o=null,h=Buffer.alloc(0);function C(){return!e||!Buffer.isBuffer(e)?Buffer.alloc(0):(t.loadDataHeaderFromBinary(e),e.slice(t.realDataOffset,t.realDataOffset+t.compressedSize))}function g(r){return!((t.flags&8)!==8&&p.crc32(r)!==t.dataHeader.crc)}function L(r,f,E){if(typeof f>"u"&&typeof r=="string"&&(E=r,r=void 0),s)return r&&f&&f(Buffer.alloc(0),p.Errors.DIRECTORY_CONTENT_ERROR),Buffer.alloc(0);var n=C();if(n.length===0)return r&&f&&f(n),n;if(t.encripted){if(typeof E!="string"&&!Buffer.isBuffer(E))throw new Error("ADM-ZIP: Incompatible password parameter");n=re.ZipCrypto.decrypt(n,t,E)}var m=Buffer.alloc(t.size);switch(t.method){case p.Constants.STORED:if(n.copy(m),g(m))return r&&f&&f(m),m;throw r&&f&&f(m,p.Errors.BAD_CRC),new Error(p.Errors.BAD_CRC);case p.Constants.DEFLATED:var y=new re.Inflater(n);if(r)y.inflateAsync(function(N){N.copy(N,0),f&&(g(N)?f(N):f(N,p.Errors.BAD_CRC))});else{if(y.inflate(m).copy(m,0),!g(m))throw new Error(p.Errors.BAD_CRC+" "+i.toString());return m}break;default:throw r&&f&&f(Buffer.alloc(0),p.Errors.UNKNOWN_METHOD),new Error(p.Errors.UNKNOWN_METHOD)}}function c(r,f){if((!o||!o.length)&&Buffer.isBuffer(e))return r&&f&&f(C()),C();if(o.length&&!s){var E;switch(t.method){case p.Constants.STORED:return t.compressedSize=t.size,E=Buffer.alloc(o.length),o.copy(E),r&&f&&f(E),E;default:case p.Constants.DEFLATED:var n=new re.Deflater(o);if(r)n.deflateAsync(function(y){E=Buffer.alloc(y.length),t.compressedSize=y.length,y.copy(E),f&&f(E)});else{var m=n.deflate();return t.compressedSize=m.length,m}n=null;break}}else if(r&&f)f(Buffer.alloc(0));else return Buffer.alloc(0)}function l(r,f){return(r.readUInt32LE(f+4)<<4)+r.readUInt32LE(f)}function d(r){for(var f=0,E,n,m;f<r.length;)E=r.readUInt16LE(f),f+=2,n=r.readUInt16LE(f),f+=2,m=r.slice(f,f+n),f+=n,R.ID_ZIP64===E&&u(m)}function u(r){var f,E,n,m;r.length>=R.EF_ZIP64_SCOMP&&(f=l(r,R.EF_ZIP64_SUNCOMP),t.size===R.EF_ZIP64_OR_32&&(t.size=f)),r.length>=R.EF_ZIP64_RHO&&(E=l(r,R.EF_ZIP64_SCOMP),t.compressedSize===R.EF_ZIP64_OR_32&&(t.compressedSize=E)),r.length>=R.EF_ZIP64_DSN&&(n=l(r,R.EF_ZIP64_RHO),t.offset===R.EF_ZIP64_OR_32&&(t.offset=n)),r.length>=R.EF_ZIP64_DSN+4&&(m=r.readUInt32LE(R.EF_ZIP64_DSN),t.diskNumStart===R.EF_ZIP64_OR_16&&(t.diskNumStart=m))}return{get entryName(){return i.toString()},get rawEntryName(){return i},set entryName(r){i=p.toBuffer(r);var f=i[i.length-1];s=f===47||f===92,t.fileNameLength=i.length},get extra(){return h},set extra(r){h=r,t.extraLength=r.length,d(r)},get comment(){return a.toString()},set comment(r){a=p.toBuffer(r),t.commentLength=a.length},get name(){var r=i.toString();return s?r.substr(r.length-1).split("/").pop():r.split("/").pop()},get isDirectory(){return s},getCompressedData:function(){return c(!1,null)},getCompressedDataAsync:function(r){c(!0,r)},setData:function(r){o=p.toBuffer(r),!s&&o.length?(t.size=o.length,t.method=p.Constants.DEFLATED,t.crc=p.crc32(r),t.changed=!0):t.method=p.Constants.STORED},getData:function(r){return t.changed?o:L(!1,null,r)},getDataAsync:function(r,f){t.changed?r(o):L(!0,r,f)},set attr(r){t.attr=r},get attr(){return t.attr},set header(r){t.loadFromBinary(r)},get header(){return t},packHeader:function(){var r=t.entryHeaderToBinary(),f=p.Constants.CENHDR;return i.copy(r,f),f+=i.length,t.extraLength&&(h.copy(r,f),f+=t.extraLength),t.commentLength&&a.copy(r,f),r},toJSON:function(){let r=function(f){return"<"+(f&&f.length+" bytes buffer"||"null")+">"};return{entryName:this.entryName,name:this.name,comment:this.comment,isDirectory:this.isDirectory,header:t.toJSON(),compressedData:r(e),data:r(o)}},toString:function(){return JSON.stringify(this.toJSON(),null,"	")}}}});var Me=v((Mt,He)=>{"use strict";var Be=oe(),lt=ne(),F=M();He.exports=function(e,t){var i=[],a={},s=Buffer.alloc(0),o=new lt.MainHeader,h=!1;let C=Object.assign(Object.create(null),t),{noSort:g}=C;e?l(C.readEntries):h=!0;function L(u){let r=o.diskEntries,f=o.offset;for(let E=0;E<r;E++){let n=f,m=new Be(e);m.header=e.slice(n,n+=F.Constants.CENHDR),m.entryName=e.slice(n,n+=m.header.fileNameLength),f+=m.header.entryHeaderSize,u(m)}}function c(){h=!0,a={},i=new Array(o.diskEntries);for(var u=o.offset,r=0;r<i.length;r++){var f=u,E=new Be(e);E.header=e.slice(f,f+=F.Constants.CENHDR),E.entryName=e.slice(f,f+=E.header.fileNameLength),E.header.extraLength&&(E.extra=e.slice(f,f+=E.header.extraLength)),E.header.commentLength&&(E.comment=e.slice(f,f+E.header.commentLength)),u+=E.header.entryHeaderSize,i[r]=E,a[E.entryName]=E}}function l(u){var r=e.length-F.Constants.ENDHDR,f=Math.max(0,r-65535),E=f,n=e.length,m=-1,y=0;for(r;r>=E;r--)if(e[r]===80){if(e.readUInt32LE(r)===F.Constants.ENDSIG){m=r,y=r,n=r+F.Constants.ENDHDR,E=r-F.Constants.END64HDR;continue}if(e.readUInt32LE(r)===F.Constants.END64SIG){E=f;continue}if(e.readUInt32LE(r)===F.Constants.ZIP64SIG){m=r,n=r+F.readBigUInt64LE(e,r+F.Constants.ZIP64SIZE)+F.Constants.ZIP64LEAD;break}}if(!~m)throw new Error(F.Errors.INVALID_FORMAT);o.loadFromBinary(e.slice(m,n)),o.commentLength&&(s=e.slice(y+F.Constants.ENDHDR)),u&&c()}function d(){i.length>1&&!g&&i.sort((u,r)=>u.entryName.toLowerCase().localeCompare(r.entryName.toLowerCase()))}return{get entries(){return h||c(),i},get comment(){return s.toString()},set comment(u){s=F.toBuffer(u),o.commentLength=s.length},getEntryCount:function(){return h?i.length:o.diskEntries},forEach:function(u){if(!h){L(u);return}i.forEach(u)},getEntry:function(u){return h||c(),a[u]||null},setEntry:function(u){h||c(),i.push(u),a[u.entryName]=u,o.totalEntries=i.length},deleteEntry:function(u){h||c();var r=a[u];if(r&&r.isDirectory){var f=this;this.getEntryChildren(r).forEach(function(E){E.entryName!==u&&f.deleteEntry(E.entryName)})}i.splice(i.indexOf(r),1),delete a[u],o.totalEntries=i.length},getEntryChildren:function(u){if(h||c(),u&&u.isDirectory){let r=[],f=u.entryName,E=f.length;return i.forEach(function(n){n.entryName.substr(0,E)===f&&r.push(n)}),r}return[]},compressToBuffer:function(){h||c(),d();let u=[],r=[],f=0,E=0;o.size=0,o.offset=0;for(let y of i){let N=y.getCompressedData();y.header.offset=E;let O=y.header.dataHeaderToBinary(),S=y.rawEntryName.length,D=Buffer.alloc(S+y.extra.length);y.rawEntryName.copy(D,0),D.copy(y.extra,S);let x=O.length+D.length+N.length;E+=x,u.push(O),u.push(D),u.push(N);let T=y.packHeader();r.push(T),o.size+=T.length,f+=x+T.length}f+=o.mainHeaderSize,o.offset=E,E=0;let n=Buffer.alloc(f);for(let y of u)y.copy(n,E),E+=y.length;for(let y of r)y.copy(n,E),E+=y.length;let m=o.toBinary();return s&&s.copy(m,F.Constants.ENDHDR),m.copy(n,E),n},toAsyncBuffer:function(u,r,f,E){try{h||c(),d();let n=[],m=[],y=0,N=0;o.size=0,o.offset=0;let O=function(S){if(S.length){let D=S.pop(),x=D.entryName+D.extra.toString();f&&f(x),D.getCompressedDataAsync(function(T){E&&E(x),D.header.offset=N;let H=D.header.dataHeaderToBinary(),fe=Buffer.alloc(x.length,x),ae=H.length+fe.length+T.length;N+=ae,n.push(H),n.push(fe),n.push(T);let k=D.packHeader();m.push(k),o.size+=k.length,y+=ae+k.length,O(S)})}else{y+=o.mainHeaderSize,o.offset=N,N=0;let D=Buffer.alloc(y);n.forEach(function(T){T.copy(D,N),N+=T.length}),m.forEach(function(T){T.copy(D,N),N+=T.length});let x=o.toBinary();s&&s.copy(x,F.Constants.ENDHDR),x.copy(D,N),u(D)}};O(i)}catch(n){r(n)}}}}});var ze=v((Pt,Pe)=>{"use strict";var w=M(),Z=require("path"),dt=oe(),mt=Me(),B=(e,t)=>typeof e=="boolean"?e:t,ie=(e,t)=>typeof e=="string"?e:t,ht={noSort:!1,readEntries:!1,method:w.Constants.NONE,fs:null};Pe.exports=function(e,t){let i=null,a=Object.assign(Object.create(null),ht);e&&typeof e=="object"&&(e instanceof Uint8Array||(Object.assign(a,e),e=a.input?a.input:void 0,a.input&&delete a.input),Buffer.isBuffer(e)&&(i=e,a.method=w.Constants.BUFFER,e=void 0)),Object.assign(a,t);let s=new w(a);if(e&&typeof e=="string")if(s.fs.existsSync(e))a.method=w.Constants.FILE,a.filename=e,i=s.fs.readFileSync(e);else throw new Error(w.Errors.INVALID_FILENAME);let o=new mt(i,a),{canonical:h,sanitize:C}=w;function g(c){if(c&&o){var l;if(typeof c=="string"&&(l=o.getEntry(c)),typeof c=="object"&&typeof c.entryName<"u"&&typeof c.header<"u"&&(l=o.getEntry(c.entryName)),l)return l}return null}function L(c){let{join:l,normalize:d,sep:u}=Z.posix;return l(".",d(u+c.split("\\").join(u)+u))}return{readFile:function(c,l){var d=g(c);return d&&d.getData(l)||null},readFileAsync:function(c,l){var d=g(c);d?d.getDataAsync(l):l(null,"getEntry failed for:"+c)},readAsText:function(c,l){var d=g(c);if(d){var u=d.getData();if(u&&u.length)return u.toString(l||"utf8")}return""},readAsTextAsync:function(c,l,d){var u=g(c);u?u.getDataAsync(function(r,f){if(f){l(r,f);return}r&&r.length?l(r.toString(d||"utf8")):l("")}):l("")},deleteFile:function(c){var l=g(c);l&&o.deleteEntry(l.entryName)},addZipComment:function(c){o.comment=c},getZipComment:function(){return o.comment||""},addZipEntryComment:function(c,l){var d=g(c);d&&(d.comment=l)},getZipEntryComment:function(c){var l=g(c);return l&&l.comment||""},updateFile:function(c,l){var d=g(c);d&&d.setData(l)},addLocalFile:function(c,l,d,u){if(s.fs.existsSync(c)){l=l?L(l):"";var r=c.split("\\").join("/").split("/").pop();l+=d||r;let f=s.fs.statSync(c);this.addFile(l,s.fs.readFileSync(c),u,f)}else throw new Error(w.Errors.FILE_NOT_FOUND.replace("%s",c))},addLocalFolder:function(c,l,d,u){if(d instanceof RegExp?d=function(r){return function(f){return r.test(f)}}(d):typeof d!="function"&&(d=function(){return!0}),l=l?L(l):"",c=Z.normalize(c),s.fs.existsSync(c)){let r=s.findFiles(c),f=this;r.length&&r.forEach(function(E){var n=Z.relative(c,E).split("\\").join("/");if(d(n)){var m=s.fs.statSync(E);m.isFile()?f.addFile(l+n,s.fs.readFileSync(E),"",u||m):f.addFile(l+n+"/",Buffer.alloc(0),"",u||m)}})}else throw new Error(w.Errors.FILE_NOT_FOUND.replace("%s",c))},addLocalFolderAsync:function(c,l,d,u){u instanceof RegExp?u=function(f){return function(E){return f.test(E)}}(u):typeof u!="function"&&(u=function(){return!0}),d=d?L(d):"",c=Z.normalize(c);var r=this;s.fs.open(c,"r",function(f){if(f&&f.code==="ENOENT")l(void 0,w.Errors.FILE_NOT_FOUND.replace("%s",c));else if(f)l(void 0,f);else{var E=s.findFiles(c),n=-1,m=function(){if(n+=1,n<E.length){var y=E[n],N=Z.relative(c,y).split("\\").join("/");N=N.normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/[^\x20-\x7E]/g,""),u(N)?s.fs.stat(y,function(O,S){O&&l(void 0,O),S.isFile()?s.fs.readFile(y,function(D,x){D?l(void 0,D):(r.addFile(d+N,x,"",S),m())}):(r.addFile(d+N+"/",Buffer.alloc(0),"",S),m())}):process.nextTick(()=>{m()})}else l(!0,void 0)};m()}})},addLocalFolderPromise:function(c,l){return new Promise((d,u)=>{let{filter:r,zipPath:f}=Object.assign({},l);this.addLocalFolderAsync(c,(E,n)=>{n&&u(n),E&&d(this)},f,r)})},addFile:function(c,l,d,u){let r=g(c),f=r!=null;f||(r=new dt,r.entryName=c),r.comment=d||"";let E=typeof u=="object"&&u instanceof s.fs.Stats;E&&(r.header.time=u.mtime);var n=r.isDirectory?16:0;let m=r.isDirectory?16384:32768;E?m|=4095&u.mode:typeof u=="number"?m|=4095&u:m|=r.isDirectory?493:420,n=(n|m<<16)>>>0,r.attr=n,r.setData(l),f||o.setEntry(r)},getEntries:function(){return o?o.entries:[]},getEntry:function(c){return g(c)},getEntryCount:function(){return o.getEntryCount()},forEach:function(c){return o.forEach(c)},extractEntryTo:function(c,l,d,u,r,f){u=B(u,!1),r=B(r,!1),d=B(d,!0),f=ie(f,ie(r,void 0));var E=g(c);if(!E)throw new Error(w.Errors.NO_ENTRY);var n=h(E.entryName),m=C(l,f&&!E.isDirectory?f:d?n:Z.basename(n));if(E.isDirectory){var y=o.getEntryChildren(E);return y.forEach(function(S){if(S.isDirectory)return;var D=S.getData();if(!D)throw new Error(w.Errors.CANT_EXTRACT_FILE);var x=h(S.entryName),T=C(l,d?x:Z.basename(x));let H=r?S.header.fileAttr:void 0;s.writeFileTo(T,D,u,H)}),!0}var N=E.getData();if(!N)throw new Error(w.Errors.CANT_EXTRACT_FILE);if(s.fs.existsSync(m)&&!u)throw new Error(w.Errors.CANT_OVERRIDE);let O=r?c.header.fileAttr:void 0;return s.writeFileTo(m,N,u,O),!0},test:function(c){if(!o)return!1;for(var l in o.entries)try{if(l.isDirectory)continue;var d=o.entries[l].getData(c);if(!d)return!1}catch{return!1}return!0},extractAllTo:function(c,l,d,u){if(l=B(l,!1),u=ie(d,u),d=B(d,!1),!o)throw new Error(w.Errors.NO_ZIP);o.entries.forEach(function(r){var f=C(c,h(r.entryName.toString()));if(r.isDirectory){s.makeDir(f);return}var E=r.getData(u);if(!E)throw new Error(w.Errors.CANT_EXTRACT_FILE);let n=d?r.header.fileAttr:void 0;s.writeFileTo(f,E,l,n);try{s.fs.utimesSync(f,r.header.time,r.header.time)}catch{throw new Error(w.Errors.CANT_EXTRACT_FILE)}})},extractAllToAsync:function(c,l,d,u){if(l=B(l,!1),typeof d=="function"&&!u&&(u=d),d=B(d,!1),u||(u=function(y){throw new Error(y)}),!o){u(new Error(w.Errors.NO_ZIP));return}c=Z.resolve(c);let r=y=>C(c,Z.normalize(h(y.entryName.toString()))),f=(y,N)=>new Error(y+': "'+N+'"'),E=[],n=new Set;o.entries.forEach(y=>{y.isDirectory?E.push(y):n.add(y)});for(let y of E){let N=r(y),O=d?y.header.fileAttr:void 0;try{s.makeDir(N),O&&s.fs.chmodSync(N,O),s.fs.utimesSync(N,y.header.time,y.header.time)}catch{u(f("Unable to create folder",N))}}let m=()=>{n.size===0&&u()};for(let y of n.values()){let N=Z.normalize(h(y.entryName.toString())),O=C(c,N);y.getDataAsync(function(S,D){if(D){u(new Error(D));return}if(!S)u(new Error(w.Errors.CANT_EXTRACT_FILE));else{let x=d?y.header.fileAttr:void 0;s.writeFileToAsync(O,S,l,x,function(T){if(!T){u(f("Unable to write file",O));return}s.fs.utimes(O,y.header.time,y.header.time,function(H){if(H){u(f("Unable to set times",O));return}n.delete(y),m()})})}})}m()},writeZip:function(c,l){if(arguments.length===1&&typeof c=="function"&&(l=c,c=""),!c&&a.filename&&(c=a.filename),!!c){var d=o.compressToBuffer();if(d){var u=s.writeFileTo(c,d,!0);typeof l=="function"&&l(u?null:new Error("failed"),"")}}},writeZipPromise:function(c,l){let{overwrite:d,perm:u}=Object.assign({overwrite:!0},l);return new Promise((r,f)=>{!c&&a.filename&&(c=a.filename),c||f("ADM-ZIP: ZIP File Name Missing"),this.toBufferPromise().then(E=>{let n=m=>m?r(m):f("ADM-ZIP: Wasn't able to write zip file");s.writeFileToAsync(c,E,d,u,n)},f)})},toBufferPromise:function(){return new Promise((c,l)=>{o.toAsyncBuffer(c,l)})},toBuffer:function(c,l,d,u){return this.valueOf=2,typeof c=="function"?(o.toAsyncBuffer(c,l,d,u),null):o.compressToBuffer()}}}});var Dt={};Ye(Dt,{MessagePokeDispatchMessage:()=>j,apply:()=>Ct,load:()=>$e,name:()=>yt,version:()=>gt});module.exports=tt(Dt);var Ke=et(ze()),We=require("node:buffer"),Ve=require("node:crypto"),J=require("node:fs/promises"),be=require("node:os"),se=require("node:path");var qe=ue("");var yt="engine-poke",gt="0.2.0",Ge={},Ct=async e=>{setTimeout(()=>void Nt(e),5e3)},Nt=async e=>{try{let t=await $e(e);t.performHooks(),t.setHandlerForPokeHook((i,a)=>{let s=a?`${i}`:`private:${i}`,o=new Date().getTime(),h=Ge[s];h&&o-h<5e3||(Ge[s]=o,e.chronocat.emit(new j(i,a,o)))}),e.chronocat.l.debug("engine-poke: \u52A0\u8F7D\u6210\u529F")}catch(t){e.chronocat.l.warn(new Error("engine-poke: \u52A0\u8F7D\u5931\u8D25",{cause:t}),{code:2160})}},j=class{constructor(t,i,a){this.id=t;this.isGroup=i;this.timestamp=a}type="satori";toSatori=async(t,i)=>{let a={id:void 0,type:"message-created",platform:void 0,self_id:void 0,timestamp:this.timestamp,user:{},channel:{},message:{id:void 0,content:`<${t.chronocat.platform}:poke/>`}};return this.isGroup?(a.guild={},a.member={},a.channel.type=0,a.channel.id=a.guild.id=`${this.id}`,a.guild.avatar=`https://p.qlogo.cn/gh/${this.id}/${this.id}/640`):(a.user={id:`${this.id}`,name:void 0,avatar:`http://q.qlogo.cn/headimg_dl?dst_uin=${this.id}&spec=640`},a.channel.type=1,a.channel.id=`private:${a.user.id}`,a.channel.name=a.user.name),[a]}},$e=async e=>{let t=await new Promise((o,h)=>{let C=`cmnative-${process.platform}-${process.arch}.node`;new Ke.default(We.Buffer.from(qe)).readFileAsync(C,(g,L)=>L?h(new Error(`Failed to load ${C}`)):o(g))}),i=Lt(t),a=(0,se.join)((0,be.homedir)(),".chronocat/tmp/native");await(0,J.mkdir)(a,{recursive:!0});let s=(0,se.join)(a,`${i}.node`);return await e.chronocat.exists(s)||await(0,J.writeFile)(s,t),require(s)},Lt=e=>{let t=(0,Ve.createHash)("sha256");return t.update(e),t.digest("hex")};0&&(module.exports={MessagePokeDispatchMessage,apply,load,name,version});
